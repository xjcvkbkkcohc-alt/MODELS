import os
import requests
import logging
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏ –≤ Render
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# --- 1. –ó–ê–ì–†–£–ó–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø ---
# (–≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º—ã –¥–æ–±–∞–≤–∏–º –≤ Render)

# URL, –æ—Ç–∫—É–¥–∞ –º—ã –±–µ—Ä–µ–º ID –∏–≥—Ä–æ–∫–æ–≤
ID_SOURCE_URL = os.environ.get('ID_SOURCE_URL') 
# –í–µ–±—Ö—É–∫, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
DISCORD_WEBHOOK_URL = os.environ.get('DISCORD_WEBHOOK_URL')

# –®–∞–±–ª–æ–Ω API Roblox
ROBLOX_API_URL_TEMPLATE = "https://apis.roblox.com/toolbox-service/v1/marketplace/10?limit=100&pageNumber=0&keyword=&creatorType=1&creatorTargetId={}&includeOnlyVerifiedCreators=false"


def get_ids_from_source(url):
    """
    –ü–æ–ª—É—á–∞–µ—Ç JSON –ø–æ URL –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ ID –∏–∑ "PlayersIds".
    """
    if not url:
        logging.critical("ID_SOURCE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ ID.")
        return []
        
    logging.info(f"–ó–∞–≥—Ä—É–∂–∞—é ID –∏–∑: {url}")
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status() # –í—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É, –µ—Å–ª–∏ URL –Ω–µ 200 OK
        
        data = response.json()
        id_list = data.get("PlayersIds", [])
        
        if not id_list:
            logging.warning("JSON –ø–æ–ª—É—á–µ–Ω, –Ω–æ –∫–ª—é—á 'PlayersIds' –ø—É—Å—Ç –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
            return []
            
        logging.info(f"–ù–∞–π–¥–µ–Ω–æ {len(id_list)} ID –∏–≥—Ä–æ–∫–æ–≤.")
        return id_list
        
    except requests.RequestException as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JSON —Å ID: {e}")
        return []
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON (—Ñ–∞–π–ª –ø–æ URL –±–∏—Ç—ã–π?): {e}")
        return []

def get_asset_count(creator_id):
    """
    –ü–æ–ª—É—á–∞–µ—Ç 'totalResults' (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Å—Å–µ—Ç–æ–≤) –¥–ª—è –æ–¥–Ω–æ–≥–æ ID.
    """
    try:
        # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º ID –≤ —à–∞–±–ª–æ–Ω URL
        url = ROBLOX_API_URL_TEMPLATE.format(creator_id)
        response = requests.get(url, timeout=10)
        
        # Roblox API –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å 400, –µ—Å–ª–∏ ID –ø–ª–æ—Ö–æ–π, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
        if response.status_code != 200:
            logging.warning(f"  ID {creator_id}: –ù–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ Roblox API (–°—Ç–∞—Ç—É—Å: {response.status_code})")
            return 0

        data = response.json()
        total = data.get("totalResults", 0)
        
        logging.info(f"  ID {creator_id}: –ù–∞–π–¥–µ–Ω–æ {total} –∞—Å—Å–µ—Ç–æ–≤.")
        return total
        
    except Exception as e:
        logging.error(f"  ID {creator_id}: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Roblox API: {e}")
        return 0 # –í–æ–∑–≤—Ä–∞—â–∞–µ–º 0, —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å –æ–±—â–∏–π –ø–æ–¥—Å—á–µ—Ç

def send_discord_report(total_assets, accounts_checked):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π embed –≤ Discord.
    """
    if not DISCORD_WEBHOOK_URL:
        logging.error("DISCORD_WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç.")
        return

    logging.info(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –æ—Ç—á–µ—Ç –≤ Discord: –í—Å–µ–≥–æ {total_assets} –∞—Å—Å–µ—Ç–æ–≤.")
    
    # –°–æ–±–∏—Ä–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π embed
    embed = {
        "title": "üìä –û–±—â–∏–π –ø–æ–¥—Å—á–µ—Ç –∞—Å—Å–µ—Ç–æ–≤",
        "description": "–°—É–º–º–∞ –≤—Å–µ—Ö `totalResults` –ø–æ —Å–ø–∏—Å–∫—É ID.",
        "color": 5814783, # –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
        "fields": [
            {
                "name": "–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∞—Å—Å–µ—Ç–æ–≤",
                "value": f"**{total_assets:,}**", # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ 1,234,567
                "inline": True
            },
            {
                "name": "ID –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ",
                "value": f"**{accounts_checked}**",
                "inline": True
            }
        ],
        "footer": {
            "text": "Obsidian Asset Counter (Cron Job)"
        }
    }
    
    payload = {"embeds": [embed]}
    
    try:
        response = requests.post(DISCORD_WEBHOOK_URL, json=payload, timeout=10)
        response.raise_for_status()
        logging.info("–û—Ç—á–µ—Ç –≤ Discord —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –≤ Discord: {e}")

# --- –ì–õ–ê–í–ù–´–ô –ë–õ–û–ö –ò–°–ü–û–õ–ù–ï–ù–ò–Ø ---
if __name__ == "__main__":
    logging.info("---= –ó–∞–ø—É—Å–∫ 5-–º–∏–Ω—É—Ç–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—Å—Å–µ—Ç–æ–≤ =---")
    
    # –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º ID
    creator_ids = get_ids_from_source(ID_SOURCE_URL)
    
    if not creator_ids:
        logging.warning("ID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        exit() # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞

    # –®–∞–≥ 2: –°—á–∏—Ç–∞–µ–º –∞—Å—Å–µ—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ ID
    grand_total = 0
    for creator_id in creator_ids:
        grand_total += get_asset_count(creator_id)
        time.sleep(0.5) # –ü–∞—É–∑–∞ 0.5 —Å–µ–∫, —á—Ç–æ–±—ã –Ω–µ "–∑–∞—Å–ø–∞–º–∏—Ç—å" Roblox API
        
    # –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    send_discord_report(grand_total, len(creator_ids))
    
    logging.info("---= –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ =---")
